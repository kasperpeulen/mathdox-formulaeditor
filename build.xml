<!--
  The Mathdox Formula Editor build file.
  2007-04-26
  Mark Spanbroek, TU/e
-->
<project basedir='.' default='default'>

  <!--
    Load properties from the build.properties file.
  -->
  <property file='build.properties'/>

  <!-- specify saxon classpath -->
  <path id='saxon.classpath'>
    <fileset dir='libraries/saxon'>
      <include name='*.jar'/>
    </fileset>
  </path>
  
  <!--
    Create a directory that contains all javascript and supporting files.
  -->
  <target name='javascript'>
  
    <mkdir dir='build/javascript'/>
    
    <!-- generate some javascript source -->
    <xslt basedir='source/generated'
      includes='auto.xml'
      style='source/generated/xsl/model.xsl'
      destdir='build/javascript'
      force='true'
      extension='js'
      processor='trax'
      classpathref='saxon.classpath'
    />

    <!-- copy javascript source -->
    <copy todir='build/javascript'>
      <fileset dir='source' excludes='convert/**,**/version*'/>
    </copy>

    <!-- copy files with version info with filter -->
    <filter token='version' value='${version}'/>
    <copy 
      todir='build/javascript'
      filtering='true'
    >
      <fileset dir='source' includes='**/version*' excludes='convert/**' />
    </copy>

    <!-- unzip jsmath fonts -->
    <unzip dest='build/temporary/jsmath'>
      <fileset dir='libraries' includes='jsMath-fonts-sprite-*.zip'/>
    </unzip>
    <unzip dest='build/temporary/jsmath/fonts-sprite/'>
      <fileset dir='libraries' includes='jsMath/*-sprite.zip'/>
    </unzip>

    <!-- unzip xmljs -->
    <untar dest='build/temporary/xmljs' compression='gzip'>
      <fileset dir='libraries' includes='xml_for_script-*.tar.gz'/>
    </untar>

    <!-- unzip explorer canvas -->
    <unzip dest='build/javascript/com/google/code/excanvas'>
      <fileset dir='libraries' includes='excanvas*.zip'/>
      <patternset>
        <include name='excanvas.js'/>
      </patternset>
    </unzip>

    <!-- unzip code from JavaScript: the definitive guide 5th edn -->
    <unzip dest='build/javascript'>
      <fileset dir='libraries' includes='oreilly_tdg5*.zip'/>
      <patternset>
        <include name='**/*.js'/>
      </patternset>
    </unzip>

    <!-- copy jsmath fonts next to the javascript files -->
    <copy todir='build/javascript/org/mathdox/formulaeditor'>
      <fileset dir='build/temporary/jsmath'/>
      <mapper type='regexp'
        from='fonts-sprite/(.*)/alpha/(.*)\.png'
        to='fonts/\1/\2\.png'
      />
    </copy>

    <!-- copy xmljs files next to the javascript files -->
    <copy todir='build/javascript/net/sf/xmljs'>
      <fileset dir='build/temporary/xmljs'/>
      <mapper type='regexp'
        from='xml_for_script-.*/jsXMLParser/(xml.*\.js)'
        to='\1'
      />
    </copy>

    <delete dir='build/temporary'/>

    <!-- copy MathCanvasFill.js -->
    <copy todir="build/javascript/org/mathdox/formulaeditor/">
      <fileset file="source/convert/MathCanvasFill.js"/>
    </copy>
    
  </target>

  <!-- 
    Create a file containing all javascript files with identify
  -->
  <target name='javascript-identify' depends ='javascript'>
    <concat destfile='build/javascript-identify/identify.body'>
      <fileset dir='build/javascript' includes='**/*.js'/>
      <filterchain>
        <linecontains>
	  <contains value='$identify('/>
	</linecontains>
	<tokenfilter>
	  <replaceregex 
	    pattern='\$identify\("(.*)"\);' 
	    replace='  &lt;identify file="\1"/&gt;'/>
	</tokenfilter>
      </filterchain>
    </concat>
    <concat destfile='build/javascript-identify/identify.xml'>
      <file file='source/generated/identify/identify.header'/>
      <file file='build/javascript-identify/identify.body'/>
      <file file='source/generated/identify/identify.footer'/>
    </concat>
    <xslt 
      in='build/javascript-identify/identify.xml'
      out='build/javascript/org/mathdox/formulaeditor/OrbeonFormsConcat.js'
      style='source/generated/identify/identify.xsl'
      force='true'
      extension='js'
      processor='trax'
      classpathref='saxon.classpath'
    >
      <param name='filedir' expression ='../../../build/javascript'/>
    </xslt>
  </target>

  <!--
    Create a zip file of all javascript and supporting files.
  -->
  <target name='zip' depends='javascript-identify'>
    <mkdir dir='build/zip'/>
    <zip destfile='build/zip/formulaeditor-${version}.zip'>
      <zipfileset dir='build/javascript' prefix='formulaeditor-${version}'/>
    </zip>
  </target>

  <!--
    Copy all files for the website.
  -->
  <target name='website' depends='javascript-identify'>
    <mkdir dir='build/website'/>
    <copy todir='build/website'>
      <fileset dir='build/javascript'/>
      <fileset dir='website' excludes='**/*html'/>
    </copy>
    <copy todir='build/website'>
      <fileset dir='website' includes='**/*html'/>
      <filterchain>
        <expandproperties/>
      </filterchain>
    </copy>
    <copy todir='build/website'>
      <fileset
        dir='build/javascript/org/mathdox/formulaeditor'
        includes='main.js'
      />
    </copy>
  </target>
  
  <!--
    Run unit tests.
  -->
  <target name='test' depends='javascript-identify'>

    <!--
      Unzip JsUnit distribution zip file.
    -->
    <unzip src='libraries/jsunit2_1.zip' dest='build/tests'/>

    <!--
      Copy source files and the tests to the build directory.
    -->
    <copy todir='build/tests/jsunit'>
      <fileset dir='build/javascript'/>
      <fileset dir='tests'/>
    </copy>

    <!--
      Set the class path for running the JsUnit tests.
    -->
    <path id='jsunit.classpath'>
      <fileset dir='build/tests/jsunit/java/lib'>
        <include name='*.jar'/>
      </fileset>
      <fileset dir='build/tests/jsunit/java/bin'>
        <include name='jsunit.jar'/>
      </fileset>
    </path>

    <!--
      Construct the url and its parameters that will run the tests upon loading
      in a browser.
    -->
    <property name='testrunner' location='build/tests/jsunit/testRunner.html'/>
    <property name='testsuite'  location='build/tests/jsunit/test.html'/>
    <property name='logdir'     location='build/tests/jsunit/logs'/>
    <property name='acceptor' value='localhost:${jsunit.port}/jsunit/acceptor'/>
    <property name='url'      value='file://${testrunner}'/>
    <property name='param.0'  value='?testPage=${testsuite}'/>
    <property name='param.1'  value='&amp;autoRun=true'/>
    <property name='param.2'  value='&amp;submitresults=${acceptor}'/>

    <!--
      Execute the JsUnit tests.
    -->
    <junit showoutput='true'>
      <test name='net.jsunit.StandaloneTest'/>
      <classpath refid='jsunit.classpath'/>
      <sysproperty key='browserFileNames' value='${jsunit.browserFileNames}'/>
      <sysproperty key='url' value='${url}${param.0}${param.1}${param.2}'/>
      <sysproperty key='port' value='${jsunit.port}'/>
      <sysproperty key='logsDirectory' value='${logdir}'/>
    </junit>

    <!--
      Create a report from the generated log files.
    -->
    <mkdir dir='build/tests/report'/>
    <junitreport todir='build/tests/report'>
      <fileset dir='build/tests/jsunit/logs'>
        <include name='*.xml'/>
      </fileset>
      <report format='noframes' todir="build/tests/report"/>
    </junitreport>

  </target>

  <!--
    Delete the build directory.
  -->
  <target name='clean'>
    <delete dir='build'/>
  </target>


  <target name='default' depends='javascript-identify'/>  
  <target name='all' depends='javascript,zip,website,test'/>

</project>
